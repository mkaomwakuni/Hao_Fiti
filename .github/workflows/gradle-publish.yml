# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Android CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        api-level: [34]
        target: [default]
        arch: [x86]

    env:
      GRADLE_USER_HOME: ${{ github.workspace }}/.gradle
      sdk-location: ${{ runner.temp }}/android-sdk

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'adopt'

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Download and setup Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 34
        components: platform-tools

    - name: Build with Gradle
      run: ./gradlew build

    - name: Run unit tests
      run: ./gradlew test

    - name: Upload APK to GitHub Actions
      uses: actions/upload-artifact@v3
      with:
        name: app-debug.apk
        path: app/build/outputs/apk/debug/app-debug.apk

    - name: Upload APK to GitHub Releases
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: ncipollo/release-action@v1
      with:
        artifacts: 'app/build/outputs/apk/debug/app-debug.apk'
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.sha }}
        releaseName: 'Release ${{ github.sha }}'
        body: |
          Release of commit ${{ github.sha }}.
        draft: false
        prerelease: true

    - name: Upload to Firebase App Distribution
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{ secrets.FIREBASE_APP_ID }}
        token: ${{ secrets.FIREBASE_TOKEN }}
        groups: testers
        file: app/build/outputs/apk/debug/app-debug.apk

